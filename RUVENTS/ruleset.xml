<?xml version="1.0"?>
<ruleset name="RUVENTS">
    <exclude-pattern>/.git/</exclude-pattern>
    <exclude-pattern>/vendor/</exclude-pattern>
    <exclude-pattern>/node_modules/</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>
    <exclude-pattern>*.css</exclude-pattern>
    <!-- Специфичные для Yii -->
    <exclude-pattern>/runtime/</exclude-pattern>
    <exclude-pattern>/protected/extensions/</exclude-pattern>
    <!-- Специфичные для Symfony -->
    <exclude-pattern>/var/cache/</exclude-pattern>
    <!-- Специфичные для Laravel -->
    <exclude-pattern>/_ide_helper.php</exclude-pattern>

    <rule ref="RUVENTS.CodeAnalysis.EmptyStatement">
        <properties>
            <property name="ignoreEmptyCatchStatements" type="bool" value="true"/>
        </properties>
    </rule>

    <!-- Разрешаем наличие php-файлов без php-кода в них. -->
    <rule ref="Internal.NoCodeFound">
        <severity>0</severity>
    </rule>

    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <!--<rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/> разработчики иногда переопределяют функции только для того, что бы поменять значение по-умолчанию для параметра метода -->
    <rule ref="Generic.Commenting.DocComment">
        <exclude name="Generic.Commenting.DocComment.TagValueIndent"/>
        <!-- Исключаем данную проверку для вьюшек, так как описание используемых в них переменных не является по-сути док-блоком -->
        <exclude-pattern>*/views/*</exclude-pattern>
    </rule>

    <!--
        Расширенные:
        <rule ref="Generic.CodeAnalysis.EmptyStatement -> RUVENTS.CodeAnalysis.EmptyStatement"/> добавлена опциональность проверки на пустые catch блоки...

        Отключенные:
        <rule ref="Generic.Classes.DisallowShortArraySyntax"/> так как мы форсируем короткий синтаксис массивов...
        <rule ref="Generic.Classes.DuplicateClassName"/> для MVC приложений сложно соблюсти...
        <rule ref="Generic.Classes.OpeningBraceSameLine"/> мы требуем, что бы у класса "{" была в новой строке...
        <rule ref="Generic.CodeAnalysis.AssignmentInCondition"/> это иногда очень удобно и улучшает читабельность кода при правильном использовании...
        <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/> по хорошему, конечно, такого быть не должно, но бывает...
        <rule ref="Generic.Commenting.Fixme"/> вообще, может и не хорошо такое иметь в кодовой базе, может включить?...
        <rule ref="Generic.Commenting.Todo"/> вообще, может и не хорошо такое иметь в кодовой базе, может включить?...
    -->

    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
</ruleset>
